/* Reference

– The image modifier classes and what they do
.image__full-width : full-bleed, no vertical cropping
.image__full-view : used with client-promo__left/right – keeps the entire image on the page (no bleed)
.image__wide-with-margins : wide, to the text frame margins (1 full column on both left and right)
.image__bleed-small-size : works with the wide-with-margins class. makes the image bleed on both sides below break medium
.image__wide-right : left-aligned with the primary text, and running to the last column on right
.image__last__no-bottom-margin : no bottom margin

.side-by-side.left (and .right) : two images, side-by-side, but not on mobile
.side-by-side__including-mobile.left (and .right) : two images, side-by-side, always
.side-by-side__including-mobile__with-overflow.left (and .right) : two images, side-by-side, always, with bleed

— Figure-only styles
.image__margin-top : for an image follows a paragraph 
.image__margin-bottom : for an image follows a paragraph

– Spacing for non-figures
.margins-vertical-small : adds a smaller amount of vertical spacing for the div

– Colour styles
.color-bg : gives the module a background color
.bg__pale-grey

*/





/* arbitrary case-study-specific classes for doing stuff to the entire page, e.g. changing the background color */
.indexventures {
	background: #ECE8E4;
}





.clients-single {
// this will mainly be used for the case-study pages, btw


	.article-head {
		height: 48vh;
		@include break(medium) { height: 60vh; }
		@include break(large)  { height: 70vh; }
		.article-title {
			align-self: start;
			margin-top: 18px;
			@include break(tiny)  { margin-top: 45px; }
			@include break(small) { margin-top: 90px; }
			@include break(medium) { grid-column: 3 / span 8;	} // the blog post headers align differently so that they match the content
			@include break(large) { margin-top: 114px; }
			h1 {
				@include type-heading-big;
				@include type-sans;
				font-weight: 800;
				color: white;
				text-transform: none;
				text-shadow: 0 0 20px rgba(0,0,0,0.5);
			}
		}
	}

	

	.article-body {
		padding-top: 15px;
		@include break(large)  { padding-top: 90px; }
		h2 { 
			@include type-sans;
			// letter-spacing: -0.02em; 
		}
		h2:first-of-type { 
			@include break(large) { margin-top: 0; }
		}
		h3 {
			@include type-sans;
			margin: 90px 0 24px 0;
			@include break(large) { margin-top: 114px; }
			/* we set the h3 margins to be the same as the h2 margins on the case-study pages
			because otherwise the spacing on these pages is too complicated */
		}



		// p:last-of-type       { margin-bottom: 0; }
		// p.with-bottom-margin { margin-bottom: 0.9em; } // needed because the last-of-type is sometimes not the bottom of the page

		
		.the-metadata {
			grid-column: 2 / span 12;
			@include break(large)  { grid-column: 3 / span 2; }
			@include break(mega)   { grid-column: 4 / span 2; }

			ul {
				list-style: none;
				padding: 13px 0 15px 0;
				margin: 0px;
				margin-top: 0;
			}
		
			li {
				text-indent: 0px;
				display: inline;
				text-transform: capitalize;
				@include break(large) { 
					display: block; 
					text-transform: none;
					padding-bottom: 2px;
				}
			}
		
			li::before { content: ""; }
			li::after { 
				content: ", ";
				@include break(large) { content: none; }
			}
			li:last-of-type::after { content: none; }
		
			a {
				text-decoration: none;
				border-bottom: none;
				&:hover { color: rgba(0,0,0,0.6); }
			}
		
			.the-sector, .the-client {
				display: inline-block;
				@include break(large) { 
					display: block;
					padding-bottom: 2px; 
				}
			}
			.the-client::before {
				content: ", ";
				margin-left: -3px;
				@include break(large) { 
					content: none; 
					margin-left: 0;
				}
			}
			.the-tags { 
				display: block; 
				border-top: 1px solid rgba(0,0,0,0.1);
				border-bottom: 1px solid rgba(0,0,0,0.1);
				margin-top: 15px; 
				@include break(large) { 
					border: none; 
					margin-top: 5px;
				}
			}
			.change-cap {
				text-transform: lowercase;
				@include break(large) { text-transform: none; }
			}		
		}
	}





	figure {

		// various figure styles 
		// *** does not include blocks with text next to the image

		&.image__full-width {
			grid-column: 1 / span 14;
			margin-top: 0;
			margin-bottom: 0;
			display: grid;
			grid-template-columns: 0px repeat(12, 1fr) 0px;
			column-gap: $column-gap;
			@include break(huge) { 
				grid-column: 1 / span 16;
				grid-template-columns: 0px repeat(14, 1fr) 0px; 
			}
			@include break(mega) { 
				grid-column: 1 / span 18;
				grid-template-columns: 0px repeat(16, 1fr) 0px; 
			}
			img {
				grid-column: 1 / span 14;
				@include break(huge) { grid-column: 1 / span 16; }
				@include break(mega) { grid-column: 1 / span 18; }
			}
			figcaption {
				grid-column: 2 / span 10;
				margin-bottom: 0;
				@include break(tiny)   { grid-column: 3 / span 10; }
				@include break(small)  { grid-column: 3 / span 8; }
				@include break(medium) { grid-column: 4 / span 6; }
				@include break(large)  { grid-column: 5 / span 5; }
				@include break(huge)   { grid-column: 6 / span 5; }
				@include break(mega)   { grid-column: 7 / span 5; }
			}
		}

		&.image__wide-with-margins {
			grid-column: 1 / span 14;
			margin-top: 0;
			margin-bottom: 0;
			display: grid;
			grid-template-columns: 0px repeat(12, 1fr) 0px;
			column-gap: $column-gap;
			@include break(huge) { 
				grid-column: 1 / span 16;
				grid-template-columns: 0px repeat(14, 1fr) 0px; 
			}
			@include break(mega) { 
				grid-column: 1 / span 18;
				grid-template-columns: 0px repeat(16, 1fr) 0px; 
			}
			img {
				grid-column: 2 / span 12;
				@include break(tiny) { grid-column: 3 / span 10; }
				@include break(huge) { grid-column: 3 / span 12; }
				@include break(mega) { grid-column: 4 / span 12; }
			}
			figcaption {
				grid-column: 2 / span 10;
				margin-bottom: 0;
				@include break(tiny)   { grid-column: 3 / span 10; }
				@include break(small)  { grid-column: 3 / span 8; }
				@include break(medium) { grid-column: 4 / span 6; }
				@include break(large)  { grid-column: 5 / span 5; }
				@include break(huge)   { grid-column: 6 / span 5; }
				@include break(mega)   { grid-column: 7 / span 5; }
			}
		}

		// modifier class, to be used primarily with the wide-with-margins class
		// makes the image bleed on both sides when at small screens
		&.image__bleed-small-sizes {
			overflow: hidden;
			img {
				width: calc(100% + 60px);
				max-width: calc(100% + 60%);
				left: 0;
				margin-left: -30px;
				grid-column: 1 / span 14;
				@include break(tiny)   { grid-column: 1 / span 14; }
				@include break(medium) { 
					width: 100%;
					left: 0;
					margin-left: 0;
					grid-column: 3 / span 10;
				}
				@include break(huge)   { grid-column: 3 / span 12; }
				@include break(mega)   { grid-column: 4 / span 12; }
			}
		}

		&.image__wide-right {
			margin-bottom: 90px;
			@include break(medium) { grid-column: 4 / span 8; }
			@include break(large)  { grid-column: 5 / span 8; margin-bottom: 120px; }
			@include break(huge)   { grid-column: 6 / span 9; }
			@include break(mega)   { grid-column: 7 / span 9; }
		}

		// Spacing modifiers

		&.image__last__no-bottom-margin {
			margin-bottom: -70px;
			@include break(medium) { margin-bottom: -90px; }
			@include break(large)  { margin-bottom: -120px; }
		}

		&.image__margin-top {
			margin-top: 90px;
			// @include break(small)  { margin-top: 70px; }
			// @include break(medium) { margin-top: 90px; }
			@include break(large)  { margin-top: 120px; }
		}

		&.image__margin-top__small {
			margin-top: 20px;
			@include break(large) { margin-top: 40px; }
		}

		&.image__margin-bottom {
			margin-bottom: 90px;
			// @include break(small)  { margin-top: 70px; }
			// @include break(medium) { margin-top: 90px; }
			@include break(large)  { margin-bottom: 120px; }
		}


	} // end figure






	// this is necessary because ... well I actually don't know, but it is.
	// I assume that somewhere something is screwing things up.
	.client-case-study {
		display: grid;
		grid-column: 1 / span 14;
		@include break(huge) { grid-column: 1 / span 16; }
		@include break(mega) { grid-column: 1 / span 18; }
		.promo__image img {
			width: 120%;
			@include break(medium) {
				width: calc(100% + 180px);
				&.desktop__extra-width { width: calc(100% + 360px); }
			}
		}
	}

	// changes to the spacing and other details
	.client-promo__right, 
	.client-promo__left {
		h3 {
			@include type-heading-small;
			@include type-sans;
		}
		border-top: none;
		margin-bottom: 90px;
		@include break(large) { margin-bottom: 120px; }
 		.promo__text {
			padding-top: 16px;
			@include break(tiny)   { padding-top: 28px; }
			@include break(medium) { padding-top: 0; }
		}
		.promo__image {
			max-height: 100%;
			height: 100%;
			img {
				position: relative;
				left: 0;
				margin-left: -10%;
				@include break(medium) {
					margin-left: 0;
				}
			}
		}
	}

	// it seems totally ridiculous to repeat this, but here we are.
	.client-promo__right .promo__image img {
		@include break(medium) {
			position: relative;
			right: 180px;
			left: -180px;
			&.desktop__extra-width {
				right: 360px;
				left: -360px;
			}
		}
	}

	.client-promo__left.image__full-view, 
	.client-promo__right.image__full-view {
		.promo__image {
			max-height: 100%;
			height: 100%;
			img {
				width: 100%;  // to prevent the image from being wider than its container
				position: relative;
				left: 0;
				margin-left: 0;
			}
		}
	}






	// revised grid settings for when we want the image to not bleed off the edge

	.client-promo__left.image__full-view {  
		grid-template-areas:
				". image image image image image image image image image image image image ." 
				". text text text text text text text text text text text text .";
		@include break(tiny)  {
			grid-template-areas: 
				". . image image image image image image image image image image . ." 
				". . text text text text text text text text text text . .";
		}  
		@include break(medium) { grid-template-areas: ". . text text text text text image image image image image . ."; }
		@include break(large)  { grid-template-areas: ". . text text text text . image image image image image . ."; }
		@include break(huge)   { grid-template-areas: ". . text text text text . image image image image image image image . ."; }
		@include break(mega)   { grid-template-areas: ". . . text text text text text . . image image image image image . . ."; }
		&.text-first {
			grid-template-areas:
				". text text text text text text text text text text text text ."
				". image image image image image image image image image image image image ."; 
			@include break(tiny) {
				grid-template-areas: 
					". . text text text text text text text text text text . ."
					". . image image image image image image image image image image . .";
			}
			@include break(medium) { grid-template-areas: ". . text text text text text image image image image image . ."; }
			@include break(large)  { grid-template-areas: ". . text text text text . image image image image image . ."; }
			@include break(huge)   { grid-template-areas: ". . text text text text . image image image image image image image . ."; }
			@include break(mega)   { grid-template-areas: ". . . text text text text text . . image image image image image . . ."; }
			// identical to the non-text-first version, as that only applies to small screens.
		}
	}

	.client-promo__right.image__full-view {
		grid-template-areas:
			". image image image image image image image image image image image image ." 
			". text text text text text text text text text text text text .";
		@include break(tiny) {
			grid-template-areas: 
				". . image image image image image image image image image image . ." 
				". . text text text text text text text text text text . .";
		}  
		@include break(medium) { grid-template-areas: ". . image image image image image text text text text text . .";}
		@include break(large)  { grid-template-areas: ". . image image image image image . text text text text . .";}
		@include break(huge)   { grid-template-areas: ". . image image image image image image image . text text text text . ."; }
		@include break(mega)   { grid-template-areas: ". . . image image image image image . . text text text text text . . ."; }
		&.text-first {
			grid-template-areas:
				". text text text text text text text text text text text text ."
				". image image image image image image image image image image image image ."; 
			@include break(tiny) {
				grid-template-areas: 
					". . text text text text text text text text text text . ."
					". . image image image image image image image image image image . .";
			}  
			@include break(medium) { grid-template-areas: ". . image image image image image text text text text text . .";}
			@include break(large)  { grid-template-areas: ". . image image image image image . text text text text . .";}
			@include break(huge)   { grid-template-areas: ". . image image image image image image image . text text text text . ."; }
			@include break(mega)   { grid-template-areas: ". . . image image image image image . . text text text text text . . ."; }
			// identical to the non-text-first version, as that only applies to small screens.
		}
	}














	/* Half-page cluster */

	.full-width-wrapper { 
		width: 100%;
		grid-column: 1 / span 14;
	}






	.cluster-left, .cluster-right {
		display: grid;
		column-gap: $column-gap;
		margin: 66px 0 70px 0;
		align-self: start;
		&:last-of-type { margin-top: 0;}
		@include break(small) { margin: 87px 0 90px 0; }
		@include break(medium) {
			&:last-of-type { margin-top: 87px; }
		}
		@include break(large)  { 
			margin: 114px 0 120px 0; 
			&:last-of-type { margin-top: 114px; }
		}
		h3 { 
			@include type-heading-small; 
			@include type-sans;
			// letter-spacing: -0.02em;
			margin: 16px 0 8px 0;
			@include break(medium) { margin: 24px 0 10px 0; }
		}
		// p {
		// 	margin-bottom: 0;
		// }
		.text {
			grid-row: 2 / 2;
		}
		.image {
			grid-row: 1 / 1;
		}
	}


	.cluster-left {
		// background: yellow;
		grid-column: 1 / span 14;
		grid-template-columns: 0px repeat(12, 1fr) 0px;
		@include break(medium) { grid-column: 1 / span 7; grid-template-columns: 0px repeat(6, 1fr);  }
		@include break(huge)   { grid-column: 1 / span 8; grid-template-columns: 0px repeat(7, 1fr);  }
		@include break(mega)   { grid-column: 1 / span 9; grid-template-columns: 0px repeat(8, 1fr);  }
		.text {
			grid-column: 2 / span 12;
			@include break(tiny)   { grid-column: 3 / span 10; }
			@include break(medium) { grid-column: 2 / span 5; }
			@include break(large)  { grid-column: 3 / span 4; }
			@include break(mega)   { grid-column: 4 / span 5; }
		}
		.image {
			grid-column: 1 / span 13;
			@include break(tiny)   { grid-column: 1 / span 12; }
			@include break(medium) { grid-column: 1 / span 7; }
			@include break(huge)   { grid-column: 1 / span 8; }
			@include break(mega)   { grid-column: 1 / span 9; }
		}
	}

	.cluster-right {
		// background: cyan;
		grid-column: 1 / span 14;
		grid-template-columns: 0px repeat(12, 1fr) 0px;
		@include break(medium) { grid-column: 8 / span 7; grid-template-columns: repeat(6, 1fr) 0px;  }
		@include break(huge)   { grid-column: 9 / span 8; grid-template-columns: repeat(7, 1fr) 0px;  }
		@include break(mega)   { grid-column: 10 / span 9; grid-template-columns: repeat(8, 1fr) 0px; }
		.text {
			grid-column: 2 / span 12;
			@include break(tiny)   { grid-column: 3 / span 10; }
			@include break(medium) { grid-column: 2 / span 5; }
			@include break(large)  { grid-column: 2 / span 4; }
			@include break(huge)   { grid-column: 3 / span 4; }
			@include break(mega)   { grid-column: 2 / span 5; }
		}
		.image {
			grid-column: 2 / span 13;
			@include break(tiny)   { grid-column: 3 / span 12; }
			@include break(medium) { grid-column: 1 / span 7; }
			@include break(huge)   { grid-column: 1 / span 8; }
			@include break(mega)   { grid-column: 1 / span 9; }
		}
	}

	.center-vertically {
		align-self: center;
	}










	.side-by-side {
		grid-column: 2 / span 12;
		@include break(tiny)   { grid-column: 3 / span 10; }
	}
	.side-by-side.left {
		@include break(medium) { grid-column: 2 / span 6; }
		@include break(large)  { grid-column: 3 / span 5; }
		@include break(huge)   { grid-column: 3 / span 6; }
		@include break(mega)   { grid-column: 4 / span 6; }
	}
	.side-by-side.right {
		@include break(medium) { grid-column: 8 / span 6; }
		@include break(large)  { grid-column: 8 / span 5; }
		@include break(huge)   { grid-column: 9 / span 6; }
		@include break(mega)   { grid-column: 10 / span 6; }
	}





	/* a side-by-side class where the images remain side-by-side at smaller screen sizes, 
	which is NOT the default behaviour */
	.side-by-side__including-mobile.left {
		grid-column: 2 / span 6;
		@include break(large)  { grid-column: 3 / span 5; }
		@include break(huge)   { grid-column: 3 / span 6; }
		@include break(mega)   { grid-column: 4 / span 6; }
	}
	.side-by-side__including-mobile.right {
		grid-column: 8 / span 6;
		@include break(large)  { grid-column: 8 / span 5; }
		@include break(huge)   { grid-column: 9 / span 6; }
		@include break(mega)   { grid-column: 10 / span 6; }
	}





	/* the same as the side-by-side__including-mobile
	except that at smaller sizes the images bleed off */
	.side-by-side__including-mobile__with-overflow.left, 
	.side-by-side__including-mobile__with-overflow.right {
		overflow: hidden;
		img { width: calc(100% + 40px); }
		@include break(medium) {
			img { width: 100%; }
		}
	}
	.side-by-side__including-mobile__with-overflow.left {
		grid-column: 1 / span 7;
		img {	margin-left: -40px; }
		@include break(medium) { 
			grid-column: 2 / span 6; 
			img { margin-left: 0; }
		}
		@include break(large)  { grid-column: 3 / span 5; }
		@include break(huge)   { grid-column: 3 / span 6; }
		@include break(mega)   { grid-column: 4 / span 6; }
	}
	.side-by-side__including-mobile__with-overflow.right {
		grid-column: 8 / span 7;
		img { right: -40px; }
		@include break(medium) { 
			grid-column: 8 / span 6; 
			img { right: 0; }
		}
		@include break(large)  { grid-column: 8 / span 5; }
		@include break(huge)   { grid-column: 9 / span 6; }
		@include break(mega)   { grid-column: 10 / span 6; }
	}










	/* ---------- Vertical spacing adjustments ---------- */

	.margin-vertical-top {
		margin-top: 90px;
		// @include break(small)  { margin-top: 70px; }
		// @include break(medium) { margin-top: 90px; }
		@include break(large)  { margin-top: 120px; }
	}

	.margin-vertical-bottom {
		margin-bottom: 90px;
		// @include break(small)  { margin-top: 70px; }
		// @include break(medium) { margin-top: 90px; }
		@include break(large)  { margin-bottom: 120px; }
	}

	.margins-vertical-small {
		margin-top: 20px;
		&:last-of-type { margin-bottom: 20px; }
		@include break(medium) { margin-bottom: 20px; }
	}










	/* ---------- Color bacgrkounds ---------- */

	.color-bg {
		margin-top: 90px;
		margin-bottom: 90px;
		padding-top: 45px;
		padding-bottom: 45px;
		@include break(large) {
			margin-top: 120px;
			margin-bottom: 120px;
		}
	}

	.bg__pale-grey {
		background: #F6F6F6;
	}



}
